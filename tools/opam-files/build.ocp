(**************************************************************************)
(*                                                                        *)
(*              OCamlPro-Inria-Irill Attribution AGPL                     *)
(*                                                                        *)
(*   Copyright OCamlPro-Inria-Irill 2011-2016. All rights reserved.       *)
(*   This file is distributed under the terms of the AGPL v3.0            *)
(*   (GNU Affero General Public Licence version 3.0) with                 *)
(*   a special OCamlPro-Inria-Irill attribution exception.                *)
(*                                                                        *)
(*     Contact: <typerex@ocamlpro.com> (http://www.ocamlpro.com/)         *)
(*                                                                        *)
(*  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,       *)
(*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES       *)
(*  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND              *)
(*  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS   *)
(*  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN    *)
(*  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN     *)
(*  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE      *)
(*  SOFTWARE.                                                             *)
(**************************************************************************)


if ocaml_version < "4.00" then {

  (* With 3.12.1, no access to compiler-libs, except using
     toplevellib, which is only available in bytecode. *)
  begin library "toplevellib"
      has_asm = false
      generated = true
      dirname = "%{OCAMLLIB}%"
  end;
  compiler_requires = [ "toplevellib" ];
  compiler_comp = [ "-I" "+compiler-libs/typing" ];
} else {
  compiler_requires = [ "compiler-libs.common" ];
  compiler_comp = [];
}

begin
  program "opam-files";

  comp = compiler_comp;
  files = [ "main.ml" ];

  pp = [ "ocp-pp" ]

  requires = [
    "opam-builder-lib"
     compiler_requires

    "ocplib-system";
    "ocplib-copam";
    string_compat;
    "ocplib-json" ]
end
